% --- Generated the 15/2/2019 at 14:44 --- %
% --- heptagon compiler, version 1.03.02 (compiled fri. may. 4 17:11:35 CET 2018) --- %
% --- Command line: /home/labcontrole/.opam/4.02.3/bin/heptc -target c -target z3z -s global automato.ept --- %

set_reorder(2);read("Property.lib");read("Synthesis.lib");read("Verif_Determ.lib");read("Simul.lib");read("Synthesis_Partial_order.lib");read("Orbite.lib");
% -- dependencies --- %

% ---------- process global ---------- %

declare(global_work_schedule, global_ac_toggle_room, global_ac_c2_room,
        global_ac_c1_room, global_ck_1, global_pnr, global_error_state);
conditions : [global_work_schedule, global_ac_toggle_room, global_ac_c2_room,
              global_ac_c1_room];
states : [global_ck_1, global_pnr, global_error_state];
controllables : [global_ac_c2_room, global_ac_c1_room];
evolutions : [];
initialisations : [];
global_c2 : global_ac_c2_room;
global_c1 : global_ac_c1_room;
global_toggle : global_ac_toggle_room;
global_v_6 : (global_toggle and global_c1);
global_v_7 : (not global_c2);
global_v_8 : (global_v_6 or global_v_7);
global_s_St_1_On_1 : ((1 when global_v_8) default -1);
global_r_St_1_On : ((1 when global_v_8) default global_pnr);
global_v_9 : (global_toggle and global_c2);
global_v_10 : (not global_c1);
global_v_11 : (global_v_9 or global_v_10);
global_s_St_1_Off_1 : ((-1 when global_v_11) default 1);
global_s_1 : ((global_s_St_1_Off_1 when global_ck_1)
  default global_s_St_1_On_1);
global_r_St_1_Off : ((1 when global_v_11) default global_pnr);
global_r : ((global_r_St_1_Off when global_ck_1) default global_r_St_1_On);
global_ck_2_1 : global_s_1;
global_ns_St_1_On_1 : -1;
global_nr_St_1_On : -1;
global_status_St_1_On : 1;
global_ns_St_1_Off_1 : 1;
global_ns_1 : ((global_ns_St_1_Off_1 when global_ck_2_1)
  default global_ns_St_1_On_1);
global_nr_St_1_Off : -1;
global_nr : ((global_nr_St_1_Off when global_ck_2_1)
  default global_nr_St_1_On);
global_status_St_1_Off : -1;
global_status : ((global_status_St_1_Off when global_ck_2_1)
  default global_status_St_1_On);
global_ac_on_room : global_status;
initialisations : concat(initialisations, [(global_ck_1 = 1)]);
evolutions : concat(evolutions, [(global_ns_1 default global_ck_1)]);
initialisations : concat(initialisations, [(global_pnr = -1)]);
evolutions : concat(evolutions, [(global_nr default global_pnr)]);
global_v : (not global_ac_on_room);
global_permission : (global_work_schedule or global_v);
global_assume : 1;
global_guarantee : global_permission;
initialisations : concat(initialisations, [(global_error_state = 1)]);
evolutions : concat(evolutions, [global_guarantee]);
constraints : [((global_work_schedule^2) = 1), ((global_ac_toggle_room^2)
               = 1), ((global_ac_c2_room^2) = 1), ((global_ac_c1_room^2)
               = 1), (global_assume = 1)];

% --- outputs : [global_ac_on_room] --- %
global : processus(conditions, states, evolutions, initialisations,
                   [gen(constraints)], controllables);
global_init : initial(global);
global : S_Security(global,B_True(global,global_error_state));
dcs_result : equal(global_init,initial(global));
if dcs_result then
    print("global: synthesis succeeded.")
else
    print("global: synthesis failed.");

if dcs_result then
    print("Triangulation and controller generation...")
else
    quit(1);
declare(p_global_ac_c2_room, p_global_ac_c1_room);
phantom_vars : [p_global_ac_c2_room, p_global_ac_c1_room];
global_triang : Triang(constraint(global),controllables,phantom_vars);
controller_inputs : [global_work_schedule, global_ac_toggle_room,
                     global_ck_1, global_pnr, p_global_ac_c2_room,
                     p_global_ac_c1_room];
heptagon_controller("global_controller.ept","global",controller_inputs,controllables,global_triang);

